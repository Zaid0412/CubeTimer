import { Alg } from "cubing/alg";
import { TwistyPlayer } from "cubing/twisty";
export type Visualization = "2D" | "3D";
type EventID = string;
export type ScrambleDisplayAttributes = {
    event?: EventID;
    scramble?: string;
    visualization?: Visualization;
    checkered?: boolean;
};
export type CachedAttributes = {
    eventID: EventID | null;
    scramble: Alg;
    visualization: Visualization | null;
    checkered: boolean;
};
export declare class ScrambleDisplay extends HTMLElement {
    #private;
    get player(): TwistyPlayer;
    constructor();
    connectedCallback(): void;
    set event(eventID: EventID | null);
    get event(): EventID | null;
    set scramble(scramble: Alg | string | null);
    get scramble(): Alg;
    set visualization(visualization: Visualization | null);
    get visualization(): Visualization | null;
    set checkered(checkered: boolean);
    get checkered(): boolean;
    protected attributeChangedCallback(name: string, oldValue: string, newValue: string): void;
    protected static get observedAttributes(): Array<keyof ScrambleDisplayAttributes>;
}
export {};
